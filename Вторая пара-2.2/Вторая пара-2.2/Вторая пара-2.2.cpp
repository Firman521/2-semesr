// Вторая пара-2.2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <fstream>
using namespace std;

void perestoi(int a[], int s, int c, int k);

void input(int a[], int n, int &m, int b, int v);

int main()
{
	ofstream F1;
	int i, n = 0, m = 0, k = 0, v, b;
	cout << "Amount of elements: ";
	cin >> n;
	cout << "A= ";
	cin >> v;
	cout << "B= ";
	cin >> b;
	if (v > b || v == b || n<=0) // проверка входных данных
	{
		cout << "Error, A>B or A=B!" << endl;
		return 0;
	}
	int* a = new int[n];
	input(a, n, m, b, v); // заполнение массива
	cout << m << endl; // количество элементов удовлетворяющих условию
	cout << "K= ";// Дополнительный элемент
	cin >> k;
	int s = m + n;// общее количество элементов в новом массиве
	cout << s << endl;
	a = (int*)realloc(a, s * sizeof(int)); // расширение массива
	if (k < 0 || k == 0)  // нахождение положительных элементов и установка дополнительных элементов.
	{
		for (i = 0; i < s; i++)
		{
			if (a[i] > 0) perestoi(a, s, i, k); //
		}
	}
	else
	{
		for (i = 0; i < s; i++)
		{
			if (a[i] > 0) //
			{
				perestoi(a, s, i, k);
				i++;
			}
		}
	}
	F1.open("itog1.txt", ios::out); //вывод итогового массива в файл.
	for (i = 0; i < s; i++)
	{
		F1 << a[i] << endl;
	}
	F1.close();
	return 0;
}

/**
Функция сдвига массива в право с определенного элемента, с шагом один.
*/
void perestoi(int a[], int s, int c, int k)
{
	int i;
	for (i = s-1; i > c; i--)
	{
		a[i + 1] = a[i];
	}
	a[c+1] = k;
}

/**
1)Функция заполнения массива случайными числами.
2)Функция подсчета количества положительных элементов и возвращение значения переменной m.
*/
void input(int a[], int n, int &m, int b, int v)
{
	int i;
	for (i = 0; i < n; i++)
	{
		a[i] = rand() % b - v;
		cout << a[i] << endl;
		if (a[i] > 0) m += 1;
	}
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
